name: Publish
on:
  push:
    tags:
      - v*.*.*

jobs:
  publish-docker:
    runs-on: self-hosted
    steps:
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/DefGuard/gateway
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{true}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container
        uses: docker/build-push-action@v3
        with:
          # platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-binaries:
    name: Release ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: self-hosted
            asset_name: defguard-gateway-linux-x86_64
          # - os: macos-latest
          #   asset_name: defguard-gateway-macos-x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install protoc - linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get -y install protobuf-compiler
      # - name: Install protoc - macos
      #   if: matrix.os == 'macos-latest'
      #   run: brew install protobuf
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Rename binary
        run: mv target/release/defguard-gateway ${{ matrix.asset_name }}-${{ github.ref_name }}
      - name: Tar
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          files: |
            ${{ matrix.asset_name }}-${{ github.ref_name }}
          outPath: ${{ matrix.asset_name }}-${{ github.ref_name }}.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.asset_name }}-${{ github.ref_name }}.tar.gz

  # publish-binary-freebsd:
  #   name: Release FreeBSD
  #   runs-on: macos-12
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Build binary
  #       uses: vmactions/freebsd-vm@v0
  #       with:
  #         usesh: true
  #         prepare: |
  #           pkg install -y protobuf rust
  #         run: |
  #           cargo build --release
  #           mv target/release/defguard-gateway defguard-gateway-freebsd-x86_64-${{ github.ref_name }}
  #           rm -rf target/
  #     - name: Tar
  #       uses: a7ul/tar-action@v1.1.0
  #       with:
  #         command: c
  #         files: |
  #           defguard-gateway-freebsd-x86_64-${{ github.ref_name }}
  #         outPath: defguard-gateway-freebsd-x86_64-${{ github.ref_name }}.tar.gz
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: defguard-gateway-freebsd-x86_64-${{ github.ref_name }}.tar.gz
