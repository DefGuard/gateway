name: Build current image
on:
  push:
    branches:
      - fix-package-builds
    paths-ignore:
      - "*.md"
      - "LICENSE"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-release:
    name: Test build ${{ matrix.build }}
    runs-on:
      - self-hosted
      - ${{ matrix.os }}
      - X64
    strategy:
      fail-fast: false
      matrix:
        build: [linux, linux-arm64]
        include:
          - build: linux
            arch: amd64
            os: Linux
            asset_name: defguard-gateway-linux-x86_64
            target: x86_64-unknown-linux-gnu
          - build: linux-arm64
            arch: arm64
            os: Linux
            asset_name: defguard-gateway-linux-arm64
            target: aarch64-unknown-linux-gnu
    steps:
      # Store the version, stripping any v-prefix
      - name: Write release version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --locked --release --target ${{ matrix.target }}
