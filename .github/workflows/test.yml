name: Test  build

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-package:
    name: Build and Package
    runs-on: self-hosted
    strategy:
      matrix:
        build: [linux, linux-arm, freebsd, opnsense]
        include:
          - build: linux
            os: self-hosted
            asset_name: defguard-gateway-linux-x86_64
            target: x86_64-unknown-linux-gnu
          - build: linux-arm
            os: self-hosted
            asset_name: defguard-gateway-linux-armv7
            target: armv7-unknown-linux-gnueabihf
          - build: freebsd
            os: self-hosted
            asset_name: defguard-gateway-freebsd-x86_64
            target: x86_64-unknown-freebsd
          - build: freebsd
            os: self-hosted
            asset_name: defguard-gateway-opnsense-x86_64
            target: x86_64-unknown-freebsd

    steps:
      - name: Write release version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/defguard-gateway ${{ matrix.asset_name }}-test

      - name: Strip release binary (linux)
        if: matrix.build == 'linux'
        run: strip "${{ matrix.asset_name }}-test"

      - name: Create DEB package
        uses: bpicode/github-action-fpm@master
        with:
          fpm_args: "${{ matrix.asset_name }}-test=/usr/sbin/defguard-gateway"
          fpm_opts: "-t deb --version=test"

      - name: Create RPM package
        if: matrix.build == 'linux'
        uses: bpicode/github-action-fpm@master
        with:
          fpm_args: "${{ matrix.asset_name }}-test=/usr/sbin/defguard-gateway"
          fpm_opts: "-t rpm --version=test"

      - name: Create FreeBSD package
        if: matrix.build == 'freebsd'
        uses: bpicode/github-action-fpm@master
        with:
          fpm_args: "${{ matrix.asset_name }}-test=/usr/local/sbin/defguard-gateway"
          fpm_opts: "-t freebsd --version=test"

      - name: Build OPNsense package
        if: matrix.build == 'opnsense'
        uses: bpicode/github-action-fpm@master
        with:
          fpm_args: |
            "${{ matrix.asset_name }}-test=/usr/local/sbin/defguard-gateway
              defguard-gateway.service.freebsd=/etc/rc.d/defguard
              example-config.toml=/etc/defguard/gateway.toml
              defguard-rc.conf=/etc/rc.conf.d/defguard
              opnsense/src/opnsense/mvc/app/controllers/OPNsense/DefguardGateway/=/usr/local/opnsense/mvc/app/controllers/OPNsense/DefguardGateway
              opnsense/src/opnsense/mvc/app/models/OPNsense/DefguardGateway/=/usr/local/opnsense/mvc/app/models/OPNsense/DefguardGateway
              opnsense/src/opnsense/mvc/app/views/OPNsense/DefguardGateway/=usr/local/opnsense/mvc/app/views/OPNsense/DefguardGateway
              opnsense/src/opnsense/service/templates/OPNsense/DefguardGateway/=/usr/local/opnsense/service/templates/OPNsense/DefguardGateway
              opnsense/src/opnsense/service/conf/actions.d/actions_defguardgateway.conf=/usr/local/opnsense/service/conf/actions.d/actions_defguardgateway.conf"
          fpm_opts: "--debug -t freebsd --version=test -p defguard-gateway_test_x86_64-unknown-opnsense.txz"
